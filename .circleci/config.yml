version: 2.1

defaults: &defaults
  environment:
    CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>...<<pipeline.git.revision>>
  working_directory: ~/app

executors:
  node:
    <<: *defaults
    docker:
      - image: circleci/node:lts

commands:
  build_package:
    description: "build a single package"
    parameters:
      pkg:
        type: string
    steps:
      - run:
          name: "Build << parameters.pkg >>"
          command: |
            yarn workspace << parameters.pkg >> build
  should_build:
    description: "command that halt it should not build this package"
    parameters:
      pkg:
        type: string
    steps:
      - run:
          name: "Should Build << parameters.pkg >>"
          command: |
            SHOULD_BUILD=true
            if [ "$SHOULD_BUILD" == false ]; then
                circleci-agent step halt
            fi

jobs:
  install_deps:
    executor: node
    steps:
      - checkout
      - run: echo "This is pipeline ID << pipeline.id >>"
      - run: echo $CIRCLE_COMPARE_URL
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: "Yarn install"
          command: |
            yarn install --frozen-lockfile --production=false --non-interactive --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules
            - ./packages/babel/node_modules
            - ./packages/deploy/node_modules
            - ./packages/packageA/node_modules
            - ./packages/packageB/node_modules
            - ./packages/packageC/node_modules
            - ./packages/packageD/node_modules
      - persist_to_workspace:
          root: .
          paths: .
  conditional_build_package:
    description: "conditional build a package"
    parameters:
      pkg:
        type: string
    executor: node
    steps:
      - attach_workspace:
            at: ~/app
      - should_build:
          pkg: << parameters.pkg >>
      - build_package:
          pkg: << parameters.pkg >>

workflows:
  version: 2
  full:
    jobs:
      - install_deps
      - conditional_build_package:
          pkg: "@test/packageA"
          requires:
            - install_deps
      - conditional_build_package:
          pkg: "@test/packageB"
          requires:
            - install_deps
      - conditional_build_package:
          pkg: "@test/packageC"
          requires:
            - install_deps
      - conditional_build_package:
          pkg: "@test/packageD"
          requires:
            - install_deps
